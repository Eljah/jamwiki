package org.vqwiki.lex.alt;


/*
Very Quick Wiki - WikiWikiWeb clone
Copyright (C) 2001 Gareth Cronin


This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.


This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.


You should have received a copy of the GNU General Public License
along with this program (gpl.txt); if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*/


import java.io.*;
import org.apache.log4j.Logger;
import org.vqwiki.*;
import org.vqwiki.servlets.WikiServlet;

%%


%public
%type           String
%unicode
%implements	org.vqwiki.lex.Lexer
%class	FritzLex

%init{
        boolean allowHtml =
                Environment.getBooleanValue(Environment.PROP_PARSER_ALLOW_HTML);


if (allowHtml)
{
        yybegin( ALLOWHTML );
} else {
        yybegin( NORMAL );
}



%init}


%eofval{
    StringBuffer returnValue = new StringBuffer( 64 ); // FEF.IV
        if( ordered ){
          ordered = false;
          //return "</ol>";
          returnValue.append( "</ol>" ); // FEF.IV
        }
        if( unordered ){
          unordered = false;
          //return "</ul>";
          returnValue.append( "</ul>" ); // FEF.IV
        }
        if( strong ){
          strong = false;
          //return( "</strong>" );
          returnValue.append( "</strong>" ); // FEF.IV
        }
        if( em ){
          em = false;
          //return( "</em>" );
          returnValue.append( "</em>" ); // FEF.IV
        }
        if ( h1 ) // FEF.IV
        {
          h1 = false;
          returnValue.append( "</h1>" ); // FEF.IV
        }
        if ( h2 ) // FEF.IV
        {
          h2 = false;
          returnValue.append( "</h2>" ); // FEF.IV
        }
        if ( h3 ) // FEF.IV
        {
          h3 = false;
          returnValue.append( "</h3>" ); // FEF.IV
        }
        if ( h4 ) // FEF.IV
        {
          h4 = false;
          returnValue.append( "</h4>" ); // FEF.IV
        }
        if ( h5 ) // FEF.IV
        {
          h5 = false;
          returnValue.append( "</h5>" ); // FEF.IV
        }
        if ( pre ) // FEF.IV
        {
          pre = false;
          returnValue.append( "</pre>" ); // FEF.IV
        }
        if ( code ) // FEF.IV
        {
          pre = false;
          returnValue.append( "</code>" ); // FEF.IV
        }
    wikiTransform = true; // FEF.IV
    if ( returnValue.length() > 0 ) // FEF.IV
    {
        return returnValue.toString();
    }
        return null;
%eofval}


%{
    protected boolean em, strong, unordered, ordered;
    boolean pre = false; // FEF.IV
    boolean code = false; // FEF.IV
    boolean wikiTransform = true; // FEF.IV
    boolean h1 = false;
    boolean h2 = false;
    boolean h3 = false;
    boolean h4 = false;
    boolean h5 = false;
    protected String virtualWiki;
        protected static Logger logger = Logger.getLogger( FritzLex.class );


	protected boolean exists( String topic ){
	  try{
	    return WikiBase.getInstance().exists( virtualWiki, topic );
	  }catch( Exception err ){
	    logger.error( err );
	  }
	  return false;
	}

    public void setVirtualWiki( String vWiki ){
      this.virtualWiki = vWiki;
    }


    // modified the following lines below:
    // hr = (----+)
    // hyperlink = (((https?)|(ftp)|(mailto)|(news)):[^\ \t\r\n<>'\"]+[a-zA-Z0-9])


%}


b               =       ([\t\ ]|{newline})
tab             =       ({b}\t)
newline         =       (\n|\r|\r\n)
nonalphanum     =       ([^a-zA-Z0-9])
alphanum        =       ([a-zA-Z0-9])
filechar        =       ([a-zA-Z0-9/.\ -_()])
boundary        =       ({newline}[\ ]*{newline})
newlinenotab    =       ({newline}[^\t])
hr          =   (----+)
escaped     = (\\.)
wikitoggle  = (\\\\\\\\+)
intLC           =       ([àáâãäåæçèéêëìíîïðñòóôõöùúûüýÿ])
wikiname        =       ([A-Z]([a-z]|{intLC})+([A-Z]([a-z]|{intLC})+)+)
link            =       ({wikiname})
link2           =       (`{alphanum}+`)
link3           =       (\[\[{alphanum}+\]\])
attachment      =       (attach:{filechar}+)
hyperlink       =       (((https?)|(ftp)|(mailto)|(news)|(file)):[^\ \t\r\n<>'\"]+[a-zA-Z0-9])
c2link          =       (c2:{wikiname})
mblink          =       (mb:{wikiname})
image           =       ({hyperlink}(\.gif|\.jpg|\.png|\.jpeg))


%state NORMAL, ALLOWHTML


%%


<NORMAL, ALLOWHTML>{wikitoggle}   { // FEF.IV
                logger.debug( "{wikitoggle}" );
                wikiTransform = !wikiTransform;
                return "";
            }

<NORMAL, ALLOWHTML>{escaped}   { // FEF.IV
                logger.debug( "{escaped}" );
                if ( (pre && code ) || !wikiTransform ) // FEF.IV
                {
                    return yytext();
                }
                // return everything (1 char) after escape char
                return yytext().substring(1);
            }


<NORMAL, ALLOWHTML>{hr}         {
                        logger.debug( "{hr}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        return "\n<hr>\n";
                        }


<NORMAL, ALLOWHTML>{image}      {
                        logger.debug( "{image}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        String link = yytext();
                        return "<img src=\"" + link.trim() + "\">";
                        }

<NORMAL, ALLOWHTML>"{{"    { // FEF.IV
                if ( !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                pre = true;
                return "<pre>";
            }



<NORMAL, ALLOWHTML>"}}"    {  // FEF.IV
                if ( !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                pre = false;
                return "</pre>";
            }

<NORMAL, ALLOWHTML>"^^^^^^"   {
                logger.debug( "^^^^^^" );
                if ( (pre && code ) || !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                if ( h5 )
                {
                  h5 = false;
                  return( "</h5>" );
                }
                else
                {
                  h5 = true;
                  return( "<h5>" );
                }
            }


<NORMAL, ALLOWHTML>"^^^^^"   {  // FEF.IV
                logger.debug( "^^^^^" );
                if ( (pre && code ) || !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                if ( h4 )
                {
                  h4 = false;
                  return( "</h4>" );
                }
                else
                {
                  h4 = true;
                  return( "<h4>" );
                }
            }


<NORMAL, ALLOWHTML>"^^^^"   {  // FEF.IV
                logger.debug( "^^^^" );
                if ( (pre && code ) || !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                if ( h3 )
                {
                  h3 = false;
                  return( "</h3>" );
                }
                else
                {
                  h3 = true;
                  return( "<h3>" );
                }
            }



<NORMAL, ALLOWHTML>"^^^"    {  // FEF.IV
                logger.debug( "^^^" );
                if ( (pre && code ) || !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                if ( h2 )
                {
                  h2 = false;
                  return( "</h2>" );
                }
                else
                {
                  h2 = true;
                  return( "<h2>" );
                }
            }


<NORMAL, ALLOWHTML>"^^" {  // FEF.IV
                logger.debug( "^^" );
                if ( (pre && code ) || !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                if ( h1 )
                {
                  h1 = false;
                  return( "</h1>" );
                }
                else
                {
                  h1 = true;
                  return( "<h1>" );
                }
            }



<NORMAL, ALLOWHTML>"'''"                {
                        logger.debug( "'''" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( strong ){
                          strong = false;
                          return( "</strong>" );
                        }
                        else{
                          strong = true;
                          return( "<strong>" );
                        }
                        }

<NORMAL, ALLOWHTML>"''"         {
                        logger.debug( "''" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( em ){
                          em = false;
                          return( "</em>" );
                        }
                        else{
                          em = true;
                          return( "<em>" );
                        }
                        }

<NORMAL>"&lt"           {
                        return "&amp;lt";
                        }
<NORMAL>"&gt"           {
                        return "&amp;gt";
                        }
<NORMAL>"&amp"          {
                        return "&amp;amp";
                        }
<NORMAL>"<"             {
                        return "&lt;";
                        }
<NORMAL>">"             {
                        return "&gt;";
                        }
<NORMAL>"&"             {
                        return "&amp;";
                        }



<ALLOWHTML>"&lt" { // FEF.IV
            if ( (pre && code ) )
            {
                            return "&amp;lt";
            }
            return yytext();
        }


<ALLOWHTML>"&gt" { // FEF.IV
            if ( (pre && code ) )
            {
                            return "&amp;gt";
            }
            return yytext();
                }


<ALLOWHTML>"&amp" { // FEF.IV
            if ( (pre && code ) )
            {
                            return "&amp;amp";
            }
            return yytext();
                }


<ALLOWHTML>"<" { // FEF.IV
            if ( (pre && code ) )
            {
                            return "&lt;";
            }
            return yytext();
                }


<ALLOWHTML>">" { // FEF.IV
            if ( (pre && code ) )
            {
                            return "&gt;";
            }
            return yytext();
                }


<ALLOWHTML>"&" { // FEF.IV
            if ( (pre && code ) )
            {
                            return "&amp;";
            }
            return yytext();
                }




<NORMAL, ALLOWHTML>{hyperlink}  {
                        logger.debug( "{hyperlink}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        String link = yytext();
                        return "<a href=\"" + link.trim() + "\">" +
                          link + "</a>";
                        }


<NORMAL, ALLOWHTML>"{{{"   {  // FEF.IV
                if ( !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                code = true;
                return "<code>";
            }


<NORMAL, ALLOWHTML>"}}}"   {  // FEF.IV
                if ( !wikiTransform ) // FEF.IV
                {
                   return yytext();
                }
                code = false;
                return "</code>";
            }








<NORMAL, ALLOWHTML>{link}               {
                        logger.debug( "{link} '" + yytext() + "'" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        String link = yytext();
                        if( exists( link.trim() ) ){
                          return "<a href=\"Wiki?" + link.trim() + "\">" +
                            link + "</a>";
                        }
                        else{
                          return link + "<a href=\"Wiki?topic=" + link.trim() +
                          "&action=" + WikiServlet.ACTION_EDIT + "\">?</a>";
                        }
                        }


<NORMAL, ALLOWHTML>{link2}              {
                        logger.debug( "{link2}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        String link = yytext();
                        link = link.substring(1);
                        link = link.substring( 0, link.length() - 1);
                        if( exists( link ) ){
                          return "<a href=\"Wiki?" + link.trim() + "\">" +
                            link + "</a>";
                        }
                        else{
                          return link + "<a href=\"Wiki?topic=" + link.trim() +
                          "&action=" + WikiServlet.ACTION_EDIT + "\">?</a>";
                        }
                        }


<NORMAL, ALLOWHTML>{link3}  {  // FEF.IV
                        logger.debug( "{link3}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        String link = yytext();
                        link = link.substring(2);
                        link = link.substring( 0, link.length() - 2);
                        if( exists( link ) ){
                          return "<a href=\"Wiki?" + link.trim() + "\">" +
                            link + "</a>";
                        }
                        else{
                          return link + "<a href=\"Wiki?topic=" + link.trim() +
                          "&action=" + WikiServlet.ACTION_EDIT + "\">?</a>";
                        }
                        }


<NORMAL, ALLOWHTML>{c2link}     {
                        logger.debug( "{c2link}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( yytext().length() < 4 ) return "[bad C2 WikiLink]";
                        String link = yytext().substring(3);
                          return "<a href=\"http://c2.com/cgi/wiki?" + link.trim() + "\">c2Wiki:" + link + "</a>";
                        }


<NORMAL, ALLOWHTML>{mblink}     {
                        logger.debug( "{mblink}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( yytext().length() < 4 ) return "[bad Meatball WikiLink]";
                        String link = yytext().substring(3);
                          return "<a href=\"http://usemod.com/cgi-bin/mb.pl?" + link.trim() + "\">MeatballWiki:" + link + "</a>";
                        }


<NORMAL, ALLOWHTML>{attachment}         {
                        logger.debug( "{attachment}" );
            if ( (pre && code ) || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        String displayLink = yytext();
                        String upDir = Environment.getValue(Environment.PROP_ATTACH_UPLOAD_DIR);
                        String baseContext = Environment.getValue(Environment.PROP_TOPIC_BASE_CONTEXT);
                        if( !(upDir.charAt(0) == '/') )
                                upDir = "/" + upDir;
                        String link = baseContext + upDir + "/" + displayLink.substring(7);
                        return "<a href=\"" + link +
                          "\">att:" + displayLink.substring(7) + "</a>";


                        }


<NORMAL, ALLOWHTML>{boundary}\t"*"      {
                        logger.debug( "{tab}*" );
            if ( pre || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( !unordered ){
                          unordered = true;
                          return "\n<ul>\n<li>";
                        }
                          return "\n<li>";
                        }


<NORMAL, ALLOWHTML>{boundary}\t"#"      {
                        logger.debug( "{tab}#" );
            if ( pre || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( !ordered ){
                          ordered = true;
                          return "\n<ol>\n<li>";
                        }
                          return "\n<li>";
                        }


<NORMAL, ALLOWHTML>{boundary}   {
                        logger.debug( "{boundary}" );
            if ( pre || !wikiTransform ) // FEF.IV
            {
               return yytext();
            }
                        if( unordered ){
                          unordered = false;
                          return "</ul><p>\n";
                        }
                        if( ordered ){
                          ordered = false;
                          return "</ol><p>\n";
                        }
                        return "<p>\n";
                        }


<NORMAL, ALLOWHTML>{newline}    {
                        logger.debug( "{newline}" );
            if ( !wikiTransform ) // FEF.IV
            {
               return "<br>\n";
            }
                        }


<NORMAL, ALLOWHTML>.            {
                        logger.debug( ". (" + yytext() + ")" );
                        return yytext();
                        }


