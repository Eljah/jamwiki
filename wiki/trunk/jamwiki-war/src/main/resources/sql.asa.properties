STATEMENT_CREATE_CATEGORY_TABLE = \
    CREATE TABLE jam_category ( \
      child_topic_id INTEGER NOT NULL, \
      category_name VARCHAR(200) NOT NULL, \
      sort_key VARCHAR(200) NULL, \
      CONSTRAINT jam_p_category PRIMARY KEY (child_topic_id, category_name), \
      CONSTRAINT jam_f_cat_child_id FOREIGN KEY (child_topic_id) REFERENCES jam_topic(topic_id) \
    )
STATEMENT_CREATE_GROUP_TABLE = \
    CREATE TABLE jam_group ( \
      group_id INTEGER NOT NULL, \
      group_name VARCHAR(30) NOT NULL, \
      group_description VARCHAR(200) NULL, \
      CONSTRAINT jam_p_group PRIMARY KEY (group_id), \
      CONSTRAINT jam_u_group_name UNIQUE (group_name) \
    )
STATEMENT_CREATE_RECENT_CHANGE_TABLE = \
    CREATE TABLE jam_recent_change ( \
      topic_version_id INTEGER NOT NULL, \
      previous_topic_version_id INTEGER NULL, \
      topic_id INTEGER NOT NULL, \
      topic_name VARCHAR(200) NOT NULL, \
      edit_date TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, \
      edit_comment VARCHAR(200) NULL, \
      wiki_user_id INTEGER NULL, \
      display_name VARCHAR(200) NOT NULL, \
      edit_type INTEGER NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      characters_changed INTEGER NULL, \
      CONSTRAINT jam_p_rc PRIMARY KEY (topic_version_id), \
      CONSTRAINT jam_f_rc_topic_ver FOREIGN KEY (topic_version_id) REFERENCES jam_topic_version(topic_version_id), \
      CONSTRAINT jam_f_rc_p_topic_v FOREIGN KEY (previous_topic_version_id) REFERENCES jam_topic_version(topic_version_id), \
      CONSTRAINT jam_f_rc_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_rc_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_rc_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id) \
    )
STATEMENT_CREATE_ROLE_TABLE = \
    CREATE TABLE jam_role ( \
      role_name VARCHAR(30) NOT NULL, \
      role_description VARCHAR(200) NULL, \
      CONSTRAINT jam_p_role PRIMARY KEY (role_name) \
    )
STATEMENT_CREATE_TOPIC_CURRENT_VERSION_CONSTRAINT = \
    ALTER TABLE jam_topic add constraint jam_f_topic_topicv \
    FOREIGN KEY (current_version_id) \
    REFERENCES jam_topic_version(topic_version_id) 
STATEMENT_CREATE_TOPIC_TABLE = \
    CREATE TABLE jam_topic ( \
      topic_id INTEGER NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      topic_name VARCHAR(200) NOT NULL, \
      delete_date TIMESTAMP NULL DEFAULT NULL, \
      topic_read_only INTEGER NOT NULL DEFAULT 0, \
      topic_admin_only INTEGER NOT NULL DEFAULT 0, \
      current_version_id INTEGER NULL, \
      topic_type INTEGER NOT NULL, \
      redirect_to VARCHAR(200) NULL, \
      CONSTRAINT jam_p_topic PRIMARY KEY (topic_id), \
      CONSTRAINT jam_f_topic_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id) \
    )
STATEMENT_CREATE_TOPIC_VERSION_TABLE = \
    CREATE TABLE jam_topic_version ( \
      topic_version_id INTEGER NOT NULL, \
      topic_id INTEGER NOT NULL, \
      edit_comment VARCHAR(200) NULL, \
      version_content TEXT NULL, \
      wiki_user_id INTEGER NULL, \
      wiki_user_ip_address VARCHAR(39) NOT NULL, \
      edit_date TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, \
      edit_type INTEGER NOT NULL, \
      previous_topic_version_id INTEGER NULL, \
      characters_changed INTEGER NULL, \
      CONSTRAINT jam_p_topic_ver PRIMARY KEY (topic_version_id), \
      CONSTRAINT jam_f_topicv_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_topicv_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_topicv_pver FOREIGN KEY (previous_topic_version_id) REFERENCES jam_topic_version(topic_version_id) \
    )
STATEMENT_CREATE_VIRTUAL_WIKI_TABLE = \
    CREATE TABLE jam_virtual_wiki ( \
      virtual_wiki_id INTEGER NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      default_topic_name VARCHAR(200) NOT NULL, \
      create_date TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, \
      CONSTRAINT jam_p_vwiki PRIMARY KEY (virtual_wiki_id), \
      CONSTRAINT jam_u_vwiki_name UNIQUE (virtual_wiki_name) \
    )
STATEMENT_CREATE_WATCHLIST_TABLE = \
    CREATE TABLE jam_watchlist ( \
      wiki_user_id INTEGER NOT NULL, \
      topic_name VARCHAR(200) NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      CONSTRAINT jam_p_watchlist PRIMARY KEY (wiki_user_id, topic_name, virtual_wiki_id), \
      CONSTRAINT jam_f_wlist_userid FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_wlist_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id) \
    )
STATEMENT_CREATE_WIKI_FILE_TABLE = \
    CREATE TABLE jam_file ( \
      file_id INTEGER NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      file_name VARCHAR(200) NOT NULL, \
      delete_date TIMESTAMP NULL, \
      file_read_only INTEGER NOT NULL DEFAULT 0, \
      file_admin_only INTEGER NOT NULL DEFAULT 0, \
      file_url VARCHAR(200) NOT NULL, \
      mime_type VARCHAR(100) NOT NULL, \
      topic_id INTEGER NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT jam_p_file PRIMARY KEY (file_id), \
      CONSTRAINT jam_f_file_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id), \
      CONSTRAINT jam_f_file_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_u_file_url UNIQUE (file_url), \
      CONSTRAINT jam_u_file_topic UNIQUE (virtual_wiki_id, topic_id) \
    )
STATEMENT_CREATE_WIKI_FILE_VERSION_TABLE = \
    CREATE TABLE jam_file_version ( \
      file_version_id INTEGER NOT NULL, \
      file_id INTEGER NOT NULL, \
      upload_comment VARCHAR(200) NULL, \
      file_url VARCHAR(200) NOT NULL, \
      wiki_user_id INTEGER NULL, \
      wiki_user_ip_address VARCHAR(39) NOT NULL, \
      upload_date TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, \
      mime_type VARCHAR(100) NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT jam_p_file_ver PRIMARY KEY (file_version_id), \
      CONSTRAINT jam_f_filev_file FOREIGN KEY (file_id) REFERENCES jam_file(file_id), \
      CONSTRAINT jam_f_filev_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_u_filev_url UNIQUE (file_url) \
    )
STATEMENT_CREATE_WIKI_USER_TABLE = \
    CREATE TABLE jam_wiki_user ( \
      wiki_user_id INTEGER NOT NULL, \
      "login" VARCHAR(100) NOT NULL, \
      display_name VARCHAR(100) NULL, \
      create_date TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, \
      last_login_date TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, \
      create_ip_address VARCHAR(39) NOT NULL, \
      last_login_ip_address VARCHAR(39) NOT NULL, \
      remember_key VARCHAR(100) NOT NULL, \
      default_locale VARCHAR(8) NULL, \
      email VARCHAR(100) NULL, \
      CONSTRAINT jam_p_wuser PRIMARY KEY (wiki_user_id), \
      CONSTRAINT jam_f_wuser_users FOREIGN KEY ("login") REFERENCES jam_users(username) \
    )
STATEMENT_CREATE_WIKI_USER_LOGIN_INDEX = \
    CREATE UNIQUE INDEX jam_u_wuser_login on jam_wiki_user ("login") 
STATEMENT_INSERT_RECENT_CHANGES = \
    INSERT INTO jam_recent_change ( \
      topic_version_id, topic_id, \
      topic_name, edit_date, wiki_user_id, display_name, \
      edit_type, virtual_wiki_id, virtual_wiki_name, edit_comment, \
      previous_topic_version_id, characters_changed \
    ) \
    SELECT \
      jam_topic_version.topic_version_id, jam_topic.topic_id, \
      jam_topic.topic_name, jam_topic_version.edit_date, \
      jam_topic_version.wiki_user_id, \
      coalesce(jam_wiki_user."login", jam_topic_version.wiki_user_ip_address), \
      jam_topic_version.edit_type, jam_virtual_wiki.virtual_wiki_id, \
      jam_virtual_wiki.virtual_wiki_name, jam_topic_version.edit_comment, \
      jam_topic_version.previous_topic_version_id, \
      jam_topic_version.characters_changed \
    FROM jam_topic, jam_virtual_wiki, jam_topic_version \
    LEFT OUTER JOIN jam_wiki_user ON ( \
      jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
    ) \
    WHERE jam_topic.topic_id = jam_topic_version.topic_id \
    AND jam_topic.virtual_wiki_id = jam_virtual_wiki.virtual_wiki_id \
    AND (jam_topic.delete_date is null or jam_topic_version.edit_type = 5)
STATEMENT_INSERT_WIKI_USER = \
    insert into jam_wiki_user ( \
      wiki_user_id, "login", display_name, create_date, \
      last_login_date, create_ip_address, last_login_ip_address, \
      remember_key, default_locale, email \
    ) values ( \
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ? \
    )
STATEMENT_SELECT_AUTHORITIES_AUTHORITY = \
    ( \
      select jam_group_authorities.group_id as group_id, \
      null as wiki_user_id, \
      jam_group_authorities.authority as authority, \
      jam_group.group_name as group_name, \
      null as username \
      from jam_group_authorities, jam_group \
      where jam_group_authorities.group_id = jam_group.group_id \
      and jam_group.group_id in ( \
        select group_id from jam_group_authorities where authority = ? \
      ) \
    ) union ( \
      select null as group_id, \
      jam_wiki_user.wiki_user_id as wiki_user_id, \
      jam_authorities.authority as authority, \
      null as group_name, \
      jam_authorities.username as username \
      from jam_authorities, jam_users, jam_wiki_user \
      where jam_authorities.username = jam_users.username \
      and jam_wiki_user."login" = jam_users.username \
      and jam_users.username in ( \
        select username from jam_authorities where authority = ? \
      ) \
    ) \
    order by group_name, username
STATEMENT_SELECT_AUTHORITIES_LOGIN = \
    select jam_wiki_user.wiki_user_id, jam_users.username, \
    jam_authorities.authority \
    from jam_wiki_user, jam_users, jam_authorities \
    where jam_users.username = jam_authorities.username \
    and jam_users.username = jam_wiki_user."login" \
    and lower(jam_users.username) like ? \
    order by jam_users.username 
STATEMENT_SELECT_WATCHLIST_CHANGES = \
    BEGIN 
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @VWIKI_ID int \
        DECLARE @USER_ID int \
        SET @VWIKI_ID = ? \
        SET @USER_ID = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \ 
        SET @COUNT = (select count(*) from jam_topic, jam_virtual_wiki, jam_topic_version, jam_wiki_user, jam_watchlist where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id and jam_topic.current_version_id = jam_topic_version.topic_version_id and jam_topic.topic_name = jam_watchlist.topic_name and jam_virtual_wiki.virtual_wiki_id = @VWIKI_ID and jam_watchlist.wiki_user_id = @USER_ID and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5)) \ 
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \     
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                      select top @TOP * from ( \
                      select top @INNERCOUNT \
                      jam_topic_version.topic_version_id, jam_topic_version.topic_id, \ 
                      jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
                      jam_topic_version.edit_date, jam_topic_version.edit_comment, \
                      jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
                      jam_wiki_user."login" as display_name, jam_topic.virtual_wiki_id, \
                      jam_virtual_wiki.virtual_wiki_name, \
                      jam_topic_version.characters_changed \
                      from jam_topic, jam_virtual_wiki, jam_topic_version, \
                      jam_wiki_user, jam_watchlist \
                      where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
                      and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
                      and jam_topic.current_version_id = jam_topic_version.topic_version_id \
                      and jam_topic.topic_name = jam_watchlist.topic_name \
                      and jam_virtual_wiki.virtual_wiki_id = @VWIKI_ID \
                      and jam_watchlist.wiki_user_id = @USER_ID \
                      and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
                      order by edit_date desc \
                      ) a \
                      order by edit_date \
                    ) b \
                    order by edit_date desc \
    END 
STATEMENT_SELECT_CATEGORIES = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @VWIKI_ID int \
        SET @VWIKI_ID = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(distinct jam_category.category_name) from jam_topic join jam_category on jam_topic.topic_id = jam_category.child_topic_id where jam_topic.virtual_wiki_id = @VWIKI_ID) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                   select top @TOP * from ( \
                      select distinct top @INNERCOUNT jam_category.category_name, jam_category.sort_key \
                      from jam_topic join jam_category on jam_topic.topic_id = jam_category.child_topic_id \
                      where jam_topic.virtual_wiki_id = '+CONVERT(VARCHAR, @VWIKI_ID) \
                      order by sort_key \
                   ) a \
                   order by sort_key desc \
                 ) b \
                 order by sort_key \
    END
STATEMENT_SELECT_RECENT_CHANGES = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @WIKI_NAME varchar(100) \
        SET @WIKI_NAME= ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_recent_change where virtual_wiki_name = @WIKI_NAME) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                   select top @TOP * from ( \
                      select top @INNERCOUNT * from jam_recent_change \
                      where virtual_wiki_name = @WIKI_NAME \
                      order by edit_date desc \
                  ) a \
                  order by edit_date \
                ) b \
                order by edit_date desc \
    END
STATEMENT_SELECT_RECENT_CHANGES_TOPIC = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @TOPIC_ID int \
        SET @TOPIC_ID = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_recent_change where topic_id = @TOPIC_ID) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                   select top @TOP * from ( \
                      select top @INNERCOUNT * from jam_recent_change \
                      where topic_id = @TOPIC_ID \
                      order by edit_date desc \
                  ) a \
                  order by edit_date \
                ) b \
                order by edit_date desc \
    END
STATEMENT_SELECT_TOPIC_BY_TYPE = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @VWIKI_ID int \
        DECLARE @TOPIC_TYPE int \
        SET @VWIKI_ID = ? \
        SET @TOPIC_TYPE = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_topic where virtual_wiki_id = @VWIKI_ID and topic_type = @TOPIC_TYPE and delete_date is null) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                   select top @TOP * from ( \
                      select top @INNERCOUNT topic_name \
                      from jam_topic where virtual_wiki_id = @VWIKI_ID \
                       and topic_type = @TOPIC_TYPE \
                       and delete_date is null \
                      order by topic_name \
                   ) a \
                   order by topic_name desc \
                 ) b \
                  order by topic_name \
    END
STATEMENT_SELECT_TOPICS_ADMIN = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @VWIKI_ID int \
        SET @VWIKI_ID = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_topic where virtual_wiki_id = @VWIKI_ID and topic_admin_only = 1 and delete_date is null) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                   select top @TOP * from ( \
                      select top @INNERCOUNT  topic_name \
                      from jam_topic where virtual_wiki_id = @VWIKI_ID \
                       and topic_admin_only = 1 \
                       and delete_date is null \
                      order by topic_name \
                   ) a \
                   order by topic_name desc \
                 ) b \
                  order by topic_name \
    END
STATEMENT_SELECT_WATCHLIST_CHANGES = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @VWIKI_ID int \
        DECLARE @USER_ID int \
        SET @VWIKI_ID = ? \
        SET @USER_ID = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_topic, jam_virtual_wiki, jam_topic_version, jam_wiki_user, jam_watchlist where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id and jam_topic.current_version_id = jam_topic_version.topic_version_id and jam_topic.topic_name = jam_watchlist.topic_name and jam_virtual_wiki.virtual_wiki_id = @VWIKI_ID and jam_watchlist.wiki_user_id = @USER_ID and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5)) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                      select top @TOP * from ( \
                        select top @INNERCOUNT \
                        jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
                        jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
                        jam_topic_version.edit_date, jam_topic_version.edit_comment, \
                        jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
                        jam_wiki_user."login" as display_name, jam_topic.virtual_wiki_id, \
                        jam_virtual_wiki.virtual_wiki_name, \
                        jam_topic_version.characters_changed \
                        from jam_topic, jam_virtual_wiki, jam_topic_version, \
                        jam_wiki_user, jam_watchlist \
                        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
                        and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
                        and jam_topic.current_version_id = jam_topic_version.topic_version_id \
                        and jam_topic.topic_name = jam_watchlist.topic_name \
                        and jam_virtual_wiki.virtual_wiki_id = @VWIKI_ID \
                        and jam_watchlist.wiki_user_id = @USER_ID \
                        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
                        order by edit_date desc \
                      ) a \
                      order by edit_date \
                    ) b \
                    order by edit_date desc \
    END
STATEMENT_SELECT_WIKI_USER = \
    select wiki_user_id, "login", display_name, \
      create_date, last_login_date, create_ip_address, \
      last_login_ip_address, remember_key, \
      default_locale, email \
    from jam_wiki_user \
    where wiki_user_id = ?
STATEMENT_SELECT_WIKI_USER_CHANGES_ANONYMOUS = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @WIKI_NAME varchar(100) \
        DECLARE @WIKI_USER varchar(100) \
        SET @WIKI_NAME = ? \
        SET @WIKI_USER = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_topic, jam_virtual_wiki, jam_topic_version where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id and jam_topic.topic_id = jam_topic_version.topic_id and jam_virtual_wiki.virtual_wiki_name = @WIKI_NAME and jam_topic_version.wiki_user_ip_address = @WIKI_USER and jam_topic_version.wiki_user_id is null and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5)) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                     select top @TOP * from ( \
                        select top @INNERCOUNT \
                        jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
                        jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
                        jam_topic_version.edit_date, jam_topic_version.edit_comment, \
                        jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
                        jam_topic_version.wiki_user_ip_address as display_name, \
                        jam_topic.virtual_wiki_id, jam_virtual_wiki.virtual_wiki_name, \
                        jam_topic_version.characters_changed \
                        from jam_topic, jam_virtual_wiki, jam_topic_version \
                        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
                        and jam_topic.topic_id = jam_topic_version.topic_id \
                        and jam_virtual_wiki.virtual_wiki_name = @WIKI_NAME \
                        and jam_topic_version.wiki_user_ip_address = @WIKI_USER \
                        and jam_topic_version.wiki_user_id is null \
                        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
                        order by edit_date desc \
                      ) a \
                       order by edit_date \
                    ) b \
                    order by edit_date desc \
    END
STATEMENT_SELECT_WIKI_USER_CHANGES_LOGIN = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        DECLARE @WIKI_NAME varchar(100) \
        DECLARE @WIKI_USER varchar(100) \
        SET @WIKI_NAME = ? \
        SET @WIKI_USER = ? \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_topic, jam_virtual_wiki, jam_topic_version, jam_wiki_user where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id and jam_topic.topic_id = jam_topic_version.topic_id and jam_virtual_wiki.virtual_wiki_name = @WIKI_NAME and jam_wiki_user."login" = @WIKI_USER and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5)) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                      select top @TOP * from ( \
                        select top @INNERCOUNT \
                          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
                          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
                          jam_topic_version.edit_date, jam_topic_version.edit_comment, \
                          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
                          jam_wiki_user."login" as display_name, jam_topic.virtual_wiki_id, \
                          jam_virtual_wiki.virtual_wiki_name, \
                          jam_topic_version.characters_changed \
                        from jam_topic, jam_virtual_wiki, jam_topic_version, jam_wiki_user \
                        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
                        and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
                        and jam_topic.topic_id = jam_topic_version.topic_id \
                        and jam_virtual_wiki.virtual_wiki_name = @WIKI_NAME \
                        and jam_wiki_user."login" = @WIKI_USER \
                        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
                        order by edit_date desc \
                      ) a \
                      order by edit_date \
                    ) b \
                    order by edit_date desc \
    END
STATEMENT_SELECT_WIKI_USER_LOGIN = \
    select wiki_user_id from jam_wiki_user \
    where "login" = ?
STATEMENT_SELECT_WIKI_USERS = \
    BEGIN \
        DECLARE @COUNT int \
        DECLARE @TOP int \
        DECLARE @OFFSET int \
        DECLARE @LIMIT int \
        DECLARE @INNERCOUNT int \
        SET @LIMIT = ? \
        SET @OFFSET = ? \
        SET @TOP = @LIMIT \
        SET @COUNT = (select count(*) from jam_wiki_user) \
        IF (@OFFSET > @COUNT) SET @OFFSET = @COUNT \
        IF (@COUNT < @OFFSET + @LIMIT) SET @TOP = @COUNT - @OFFSET \
        SET @INNERCOUNT = @OFFSET + @LIMIT \
        select * from ( \
                   select top @TOP * from ( \
                      select top @INNERCOUNT "login" \
                      from jam_wiki_user \
                      order by "login" \
                   ) a \
                   order by "login" desc \
                 ) b \
                 order by "login" \
    END
