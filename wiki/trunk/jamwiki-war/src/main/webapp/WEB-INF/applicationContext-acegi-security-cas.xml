<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN/EN" "http://www.springframework.org/dtd/spring-beans.dtd" >

<!-- Configuration example for CAS (JA-SIG Central Authentication Service).
   - Enable this by changing the value of contextConfigLocation in web.xml
   - CAS parameters are retrieved from cas.properties in classpath
   - A user authenticated by CAS has ROLE_USER by default
   - Admin users may be mapped in memoryAuthenticationDaoWithDefaultRoles to ROLE_ADMIN
-->

<beans>

	<!-- ========================= GLOBAL DEFINITIONS ========================= -->

	<!--
		Configurer to set properties changing in different environments.
		Files read in last will win (override settings from previous files).
	-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound"><value>false</value></property>
		<property name="locations">
			<list>
				<value>classpath:cas.properties</value>
			</list>
		</property>
	</bean>

	<!-- ======================== FILTER CHAIN ======================= -->

	<bean id="filterChainProxy"
		class="org.acegisecurity.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				PATTERN_TYPE_APACHE_ANT
				/**=httpSessionContextIntegrationFilter,logoutFilter,casProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,exceptionMessageFilter,filterInvocationInterceptor
			</value>
		</property>
	</bean>

	<!-- ======================== HTTP Session integration ======================== -->

	<bean id="httpSessionContextIntegrationFilter"
		class="org.acegisecurity.context.HttpSessionContextIntegrationFilter">
		<property name="context">
			<value>org.acegisecurity.context.SecurityContextImpl</value>
		</property>
	</bean>

	<!-- ========================= CAS Service Provider ========================= -->

	<bean id="serviceProperties" class="org.acegisecurity.ui.cas.ServiceProperties">
		<property name="service"><value>${jamwiki.base.url}/j_acegi_cas_security_check</value></property>
		<property name="sendRenew"><value>false</value></property>
	</bean>

	<!-- +++++++++ Error Message Provider +++++++++ -->
	
	<!-- specify default error messages when access is denied to a specific URL -->
	<bean id="errorMessageProvider" class="org.jamwiki.authentication.JAMWikiErrorMessageProvider">
		<property name="urlPatterns">
			<value>
				PATTERN_TYPE_APACHE_ANT
				/**/Special:Admin=login.message.admin
				/**/Special:Edit=login.message.edit
				/**/Special:Maintenance=login.message.admin
				/**/Special:Manage=login.message.admin
				/**/Special:Move=login.message.move
				/**/Special:Roles=login.message.admin
				/**/Special:Translation=login.message.admin
				/**/*=login.message.default
			</value>
		</property>
	</bean>

	<!-- add exception message to the request -->
	<bean id="exceptionMessageFilter" class="org.jamwiki.authentication.JAMWikiExceptionMessageFilter">
		<property name="errorMessageProvider">
			<ref bean="errorMessageProvider" />
		</property>
	</bean>

	<!-- ======================== CAS Processing Filter ======================== -->

	<bean id="casProcessingFilter" class="org.acegisecurity.ui.cas.CasProcessingFilter">
		<property name="authenticationManager"><ref local="authenticationManager"/></property>
		<property name="authenticationFailureUrl"><value>/casfailed.jsp</value></property>
		<property name="defaultTargetUrl"><value>/</value></property>
		<property name="filterProcessesUrl"><value>/j_acegi_cas_security_check</value></property>
	</bean>

	<bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint"><ref bean="casProcessingFilterEntryPoint"/></property>
		<property name="accessDeniedHandler">
			<bean class="org.jamwiki.authentication.JAMWikiAccessDeniedHandler">
				<!-- TODO: set error page -->
				<property name="errorPage" value="/en/StartingPoints" />
			</bean>
		</property>
	</bean>

	<bean id="casProcessingFilterEntryPoint" class="org.acegisecurity.ui.cas.CasProcessingFilterEntryPoint">
		<property name="loginUrl"><value>${cas.base.url}/login</value></property>
		<property name="serviceProperties"><ref bean="serviceProperties"/></property>
	</bean>


	<!-- ======================== AUTHENTICATION ======================= -->

	<bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="casAuthenticationProvider"/>
				<ref local="anonymousAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="casAuthenticationProvider" class="org.acegisecurity.providers.cas.CasAuthenticationProvider">
		<property name="casAuthoritiesPopulator"><ref local="casAuthoritiesPopulator"/></property>
		<property name="casProxyDecider"><ref local="casProxyDecider"/></property>
		<property name="ticketValidator"><ref local="casProxyTicketValidator"/></property>
		<property name="statelessTicketCache"><ref local="statelessTicketCache"/></property>
		<property name="key"><value>k7oihdÂ§()8</value></property>
	</bean>

	<bean id="casProxyTicketValidator" class="org.acegisecurity.providers.cas.ticketvalidator.CasProxyTicketValidator">
		<property name="casValidate"><value>${cas.base.url}/proxyValidate</value></property>
		<property name="proxyCallbackUrl"><value>${cas.proxy.callback.base.url}/casProxy/receptor</value></property>
		<property name="serviceProperties"><ref local="serviceProperties"/></property>
		<property name="trustStore"><value>${cas.serverCA.tustStore.path}</value></property>
	</bean>

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>

	<bean id="ticketCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager"/>
		</property>
		<property name="cacheName">
			<value>ticketCache</value>
		</property>
	</bean>

	<bean id="statelessTicketCache" class="org.acegisecurity.providers.cas.cache.EhCacheBasedTicketCache">
		<property name="cache"><ref local="ticketCacheBackend"/></property>
	</bean>

	<bean id="casAuthoritiesPopulator" class="org.acegisecurity.providers.cas.populator.DaoCasAuthoritiesPopulator">
		<property name="userDetailsService"><ref local="memoryAuthenticationDaoWithDefaultRoles"/></property>
	</bean>

	<bean id="memoryAuthenticationDaoWithDefaultRoles" class="org.jamwiki.authentication.InMemoryDaoWithDefaultRoles">
		<property name="defaultAuthorities">
			<list>
				<bean class="org.acegisecurity.GrantedAuthorityImpl">
					<constructor-arg value="ROLE_USER"/>
				</bean>
				<bean class="org.acegisecurity.GrantedAuthorityImpl">
					<constructor-arg value="ROLE_NO_ACCOUNT"/>
				</bean>
			</list>
		</property>
		<property name="userMap">
			<value>
				rs=ignoredPassword,ROLE_USER,ROLE_ADMIN,ROLE_NO_ACCOUNT
			</value>
		</property>
	</bean>

	<bean id="casProxyDecider" class="org.acegisecurity.providers.cas.proxy.RejectProxyTickets"/>

	<!-- +++++++++ Anonymous authentication +++++++++ -->
	<!-- Anonymous users are assigned ROLE_ANONYMOUS to be able to allow exceptions to general access rules -->

	<bean id="anonymousProcessingFilter" class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
		<property name="key" value="jam35Wiki" />
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>

	<bean id="anonymousAuthenticationProvider"
		class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
		<property name="key" value="jam35Wiki" />
	</bean>

	<!-- +++++++++ Logout handling +++++++++ -->

	<bean id="logoutFilter" class="org.jamwiki.authentication.JAMWikiLogoutFilter">
		<!-- special hard-coded constant indicating default for virtual wiki -->
		<constructor-arg value="${cas.base.url}/logout" />
		<constructor-arg>
			<list>
				<bean class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<!-- do not include virtual wiki in the url, JAMWikiLogoutFilter adds it -->
		<property name="filterProcessesUrl" value="/Special:Logout" />
	</bean>

	<!-- ======================== Authorization ======================== -->

	<!-- +++++++++ Access Decision: is access allowed? +++++++++ -->

	<bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter" />

	<bean id="accessDecisionManager"
		class="org.acegisecurity.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions">
			<value>false</value>
		</property>
		<property name="decisionVoters">
			<list>
				 <ref local="roleVoter" />
			</list>
		</property>
	</bean>


	<!-- +++++++++ Enforce Security based on URLs  +++++++++ -->

	<!-- Intercept access to specified URLs and enforce security -->
	<bean id="filterInvocationInterceptor"
		class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager">
			<ref local="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref local="accessDecisionManager" />
		</property>
		<property name="objectDefinitionSource">
			<value>
				PATTERN_TYPE_APACHE_ANT
				/**/Special:Admin=ROLE_SYSADMIN
				/**/Special:Maintenance=ROLE_ADMIN
				/**/Special:RecentChangesFeed=ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN
				/**/Special:Roles=ROLE_SYSADMIN
				/**/Special:Setup=ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN
				/**/Special:Translation=ROLE_SYSADMIN
				/**/Special:Upgrade=ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN
				/**/*.css=ROLE_ANONYMOUS,ROLE_USER
				/images/**=ROLE_ANONYMOUS,ROLE_USER
				/js/**=ROLE_ANONYMOUS,ROLE_USER
				/upload/**=ROLE_ANONYMOUS,ROLE_USER
				/**=ROLE_USER
			</value>
		</property>
	</bean>


	<!-- +++++++++ Logging  +++++++++ -->

	<bean id="authenticationLoggerListener" class="org.acegisecurity.event.authentication.LoggerListener"/>
	<bean id="authorizationLoggerListener" class="org.acegisecurity.event.authorization.LoggerListener"/>


</beans>

