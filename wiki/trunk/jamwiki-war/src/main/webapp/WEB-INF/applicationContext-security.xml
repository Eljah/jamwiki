<?xml version="1.0" encoding="UTF-8"?>

<!-- Default security configuration.
   - User accounts and roles are handled by JAMWiki
-->

<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.2.xsd">

	<!--
	This section contains the basic Spring Security configuration settings.  The intercept-url elements
	define what URLs are protected and what permission is required to access those URLs.  The remember-me
	element enables a cookie to be stored to remember user logins across sessions, and the anonymous
	element implements Spring Security's basic anonymous user permissions - note that these will be updated
	by the JAMWikiAnonymousProcessingFilter.
	-->
	<http auto-config="false" entry-point-ref="authenticationEntryPoint">
		<intercept-url pattern="/**/Special:Admin" access="ROLE_SYSADMIN" />
		<intercept-url pattern="/**/Special:Edit" access="ROLE_EDIT_EXISTING,ROLE_EDIT_NEW" />
		<intercept-url pattern="/**/Special:Login" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/**/Special:Maintenance" access="ROLE_SYSADMIN" />
		<intercept-url pattern="/**/Special:Manage" access="ROLE_ADMIN" />
		<intercept-url pattern="/**/Special:Move" access="ROLE_MOVE" />
		<intercept-url pattern="/**/Special:RecentChangesFeed" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/**/Special:Roles" access="ROLE_SYSADMIN" />
		<intercept-url pattern="/**/Special:Setup" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/**/Special:Translation" access="ROLE_TRANSLATE" />
		<intercept-url pattern="/**/Special:Upload" access="ROLE_UPLOAD" />
		<intercept-url pattern="/**/Special:Upgrade" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/**/*.jsp" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/**/*.css" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/images/**" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/js/**" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/upload/**" access="ROLE_ANONYMOUS,ROLE_USER" />
		<intercept-url pattern="/**" access="ROLE_VIEW" />
		<remember-me key="jam35Wiki" user-service-ref="jamWikiAuthenticationDao" />
		<anonymous key="jam35Wiki" />
		<!-- note that the JAMWiki LoginServlet will add the appropriate logout success URL to the request during logout -->
		<logout />
	</http>

	<!--
	The authentication processing filter controls where a user will be sent when he tries to
	access a protected URL and how that user will be authenticated after trying to login.
	-->
	<b:bean id="authenticationProcessingFilter" class="org.jamwiki.authentication.JAMWikiAuthenticationProcessingFilter">
		<b:property name="authenticationManager" ref="authenticationManager" />
		<!-- do not include virtual wiki in the url, JAMWikiAuthenticationProcessingFilter adds it -->
		<b:property name="authenticationFailureUrl" value="/Special:Login?message=error.login" />
		<!-- special hard-coded constant indicating default for virtual wiki -->
		<b:property name="defaultTargetUrl" value="/DEFAULT_VIRTUAL_WIKI" />
		<!-- do not include virtual wiki in the url, JAMWikiAuthenticationProcessingFilter adds it -->
		<b:property name="filterProcessesUrl" value="/j_acegi_security_check" />
		<b:property name="rememberMeServices" ref="_rememberMeServices" />
		<custom-filter position="AUTHENTICATION_PROCESSING_FILTER" />
	</b:bean>
	<authentication-manager alias="authenticationManager" />

	<!--
	The authentication provider is the element which is passed user login attempts for verification.
	-->
	<authentication-provider user-service-ref="jamWikiAuthenticationDao">
		<password-encoder ref="jamwikiPasswordEncoder" />
	</authentication-provider>
	<b:bean id="jamWikiAuthenticationDao" class="org.jamwiki.authentication.JAMWikiDaoImpl" />
	<b:bean id="jamwikiPasswordEncoder" class="org.jamwiki.authentication.JAMWikiPasswordEncoder" />

	<!--
	In addition to the standard Spring Security anonymous processing filter a custom anonymous
	processing filter is used to add JAMWiki-specific anonymous roles to the user authentication
	object.  These roles can be configured from the Special:Roles page in the JAMWiki admin.
	-->
	<b:bean id="anonymousProcessingFilter" class="org.jamwiki.authentication.JAMWikiAnonymousProcessingFilter">
		<b:property name="key" value="jam35Wiki" />
		<custom-filter after="ANONYMOUS_FILTER" />
	</b:bean>

	<!--
	The error message provider adds a page-specific error message to be used when a user is denied
	access to a page.  For example, a different error is shown to users who are not allowed to edit
	a page than to those who are denied access to the admin pages.
	-->
	<b:bean id="errorMessageProvider" class="org.jamwiki.authentication.JAMWikiErrorMessageProvider">
		<b:property name="urlPatterns">
			<b:value><![CDATA[
				PATTERN_TYPE_APACHE_ANT
				/**/Special:Admin=login.message.admin
				/**/Special:Edit=login.message.edit
				/**/Special:Maintenance=login.message.admin
				/**/Special:Manage=login.message.admin
				/**/Special:Move=login.message.move
				/**/Special:Roles=login.message.admin
				/**/Special:Translation=login.message.admin
				/**/*=login.message.default
			]]></b:value>
		</b:property>
	</b:bean>

	<!--
	This method executes after the default Spring exception translation filter and controls where
	users are redirected to when they attempt to access a page and access is denied.  This custom
	filter is needed in order to add virtual wiki and any message from the errorMessageProvider to
	the redirect.
	-->
	<b:bean id="exceptionTranslationFilter" class="org.jamwiki.authentication.JAMWikiExceptionTranslationFilter">
		<b:property name="errorMessageProvider" ref="errorMessageProvider" />
		<!-- do not include virtual wiki in the url, JAMWikiAccessDeniedHandler adds it -->
		<b:property name="errorPage" value="/Special:Login" />
		<custom-filter after="EXCEPTION_TRANSLATION_FILTER" />
	</b:bean>

	<!--
	The entry point is the page to which users are redirected when login is required.
	-->
	<b:bean id="authenticationEntryPoint" class="org.jamwiki.authentication.JAMWikiAuthenticationProcessingFilterEntryPoint">
		<!-- do not include virtual wiki in the url, JAMWikiAuthenticationProcessingFilterEntryPoint adds it -->
		<b:property name="loginFormUrl" value="/Special:Login" />
		<!-- a PortMapper has to be configured if this is true and we are not using default ports -->
		<b:property name="forceHttps" value="false" />
	</b:bean>

	<!--
	Standard Spring Security integration with EhCache is available to implement object caching.
	-->
	<!-- disable for now until configuration issues are resolved
	<b:bean id="userCache" class="org.springframework.security.providers.dao.cache.EhCacheBasedUserCache">
		<b:property name="cache" ref="userCacheBackend" />
	</b:bean>
	<b:bean id="userCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<b:property name="cacheManager" ref="cacheManager" />
		<b:property name="cacheName" value="userCache" />
	</b:bean>
	<b:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
	-->
</b:beans>
