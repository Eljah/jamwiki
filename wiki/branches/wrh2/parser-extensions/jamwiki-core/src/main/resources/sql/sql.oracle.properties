STATEMENT_CONNECTION_VALIDATION_QUERY = \
    select 1 from dual
# use SYSTIMESTAMP instead of CURRENT_TIMESTAMP
STATEMENT_CREATE_LOG_TABLE = \
    CREATE TABLE jam_log ( \
      log_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      wiki_user_id INTEGER, \
      display_name VARCHAR(200) NOT NULL, \
      topic_id INTEGER, \
      topic_version_id INTEGER, \
      log_type INTEGER NOT NULL, \
      log_comment VARCHAR(200), \
      log_params VARCHAR(500), \
      CONSTRAINT jam_f_log_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_log_topic_ver FOREIGN KEY (topic_version_id) REFERENCES jam_topic_version(topic_version_id), \
      CONSTRAINT jam_f_log_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_log_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id) \
    )
# use SYSTIMESTAMP instead of CURRENT_TIMESTAMP
STATEMENT_CREATE_RECENT_CHANGE_TABLE = \
    CREATE TABLE jam_recent_change ( \
      topic_version_id INTEGER, \
      previous_topic_version_id INTEGER, \
      topic_id INTEGER, \
      topic_name VARCHAR(200), \
      change_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      change_comment VARCHAR(200), \
      wiki_user_id INTEGER, \
      display_name VARCHAR(200) NOT NULL, \
      edit_type INTEGER, \
      log_type INTEGER, \
      log_params VARCHAR(500), \
      virtual_wiki_id INTEGER NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      characters_changed INTEGER, \
      CONSTRAINT jam_f_rc_topic_ver FOREIGN KEY (topic_version_id) REFERENCES jam_topic_version(topic_version_id), \
      CONSTRAINT jam_f_rc_p_topic_v FOREIGN KEY (previous_topic_version_id) REFERENCES jam_topic_version(topic_version_id), \
      CONSTRAINT jam_f_rc_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_rc_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_rc_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id) \
    )
# use SYSTIMESTAMP instead of CURRENT_TIMESTAMP
# use CLOB instead of TEXT
STATEMENT_CREATE_TOPIC_VERSION_TABLE = \
    CREATE TABLE jam_topic_version ( \
      topic_version_id INTEGER NOT NULL, \
      topic_id INTEGER NOT NULL, \
      edit_comment VARCHAR(200), \
      version_content CLOB, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      edit_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      edit_type INTEGER NOT NULL, \
      previous_topic_version_id INTEGER, \
      characters_changed INTEGER, \
      version_params VARCHAR(500), \
      CONSTRAINT jam_p_topic_ver PRIMARY KEY (topic_version_id), \
      CONSTRAINT jam_f_topicv_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_topicv_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_topicv_pver FOREIGN KEY (previous_topic_version_id) REFERENCES jam_topic_version(topic_version_id) \
    )
# use SYSTIMESTAMP instead of CURRENT_TIMESTAMP
STATEMENT_CREATE_VIRTUAL_WIKI_TABLE = \
    CREATE TABLE jam_virtual_wiki ( \
      virtual_wiki_id INTEGER NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      default_topic_name VARCHAR(200), \
      create_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      logo_image_url VARCHAR(200), \
      site_name VARCHAR(200), \
      meta_description VARCHAR(500), \
      CONSTRAINT jam_p_vwiki PRIMARY KEY (virtual_wiki_id), \
      CONSTRAINT jam_u_vwiki_name UNIQUE (virtual_wiki_name) \
    )
# use SYSTIMESTAMP instead of CURRENT_TIMESTAMP
STATEMENT_CREATE_WIKI_FILE_VERSION_TABLE = \
    CREATE TABLE jam_file_version ( \
      file_version_id INTEGER NOT NULL, \
      file_id INTEGER NOT NULL, \
      upload_comment VARCHAR(200), \
      file_url VARCHAR(200) NOT NULL, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      upload_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      mime_type VARCHAR(100) NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT jam_p_file_ver PRIMARY KEY (file_version_id), \
      CONSTRAINT jam_f_filev_file FOREIGN KEY (file_id) REFERENCES jam_file(file_id), \
      CONSTRAINT jam_f_filev_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_u_filev_url UNIQUE (file_url) \
    )
# use SYSTIMESTAMP instead of CURRENT_TIMESTAMP
STATEMENT_CREATE_WIKI_USER_TABLE = \
    CREATE TABLE jam_wiki_user ( \
      wiki_user_id INTEGER NOT NULL, \
      login VARCHAR(100) NOT NULL, \
      display_name VARCHAR(100), \
      create_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      last_login_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL, \
      create_ip_address VARCHAR(39) NOT NULL, \
      last_login_ip_address VARCHAR(39) NOT NULL, \
      default_locale VARCHAR(8), \
      email VARCHAR(100), \
      editor VARCHAR(50), \
      signature VARCHAR(255), \
      CONSTRAINT jam_p_wuser PRIMARY KEY (wiki_user_id), \
      CONSTRAINT jam_f_wuser_users FOREIGN KEY (login) REFERENCES jam_users(username) \
    )
# use rownum instead of limit and offset
STATEMENT_INSERT_RECENT_CHANGES_VERSIONS = \
    INSERT INTO jam_recent_change ( \
      topic_version_id, topic_id, \
      topic_name, change_date, wiki_user_id, display_name, \
      edit_type, virtual_wiki_id, virtual_wiki_name, change_comment, \
      previous_topic_version_id, characters_changed, log_type, log_params \
    ) \
    SELECT \
      topic_version_id, topic_id, topic_name, edit_date, \
      wiki_user_id, user_display, edit_type, virtual_wiki_id, \
      virtual_wiki_name, edit_comment, previous_topic_version_id, \
      characters_changed, log_type, version_params \
    from ( \
      SELECT a.*, rownum rowcount from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic.topic_id, \
          jam_topic.topic_name, jam_topic_version.edit_date, \
          jam_topic_version.wiki_user_id, \
          coalesce(jam_wiki_user.login, jam_topic_version.wiki_user_display) as user_display, \
          jam_topic_version.edit_type, jam_virtual_wiki.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, jam_topic_version.edit_comment, \
          jam_topic_version.previous_topic_version_id, \
          jam_topic_version.characters_changed, null as log_type, jam_topic_version.version_params \
        FROM jam_topic, jam_virtual_wiki, jam_topic_version \
        LEFT OUTER JOIN jam_wiki_user ON ( \
          jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        ) \
        WHERE jam_topic.topic_id = jam_topic_version.topic_id \
        AND jam_topic.virtual_wiki_id = jam_virtual_wiki.virtual_wiki_id \
        AND jam_topic.delete_date is null \
        AND ( \
          jam_topic_version.edit_type in (1, 2, 3) \
          OR (jam_topic_version.edit_type = 8 AND jam_topic.current_version_id != jam_topic_version.topic_version_id) \
        ) \
        order by jam_topic_version.edit_date desc \
      ) a \
      where rownum <= ? \
    )
# use rownum instead of limit and offset
STATEMENT_SELECT_CATEGORIES = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select distinct jam_category.category_name, jam_category.sort_key \
        from jam_topic, jam_category \
        where jam_topic.topic_id = jam_category.child_topic_id \
        and jam_topic.virtual_wiki_id = ? \
        order by jam_category.sort_key \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_LOG_ITEMS = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select * \
        from jam_log \
        where virtual_wiki_id = ? \
        order by log_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_LOG_ITEMS_BY_TYPE = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select * \
        from jam_log \
        where log_type = ? and virtual_wiki_id = ? \
        order by log_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_RECENT_CHANGES = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select * \
        from jam_recent_change \
        where virtual_wiki_name = ? \
        order by change_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_TOPIC_BY_TYPE = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select topic_name, topic_id \
        from jam_topic \
        where virtual_wiki_id = ? \
        and topic_type in (?, ?) \
        and jam_topic.namespace_id >= ? \
        and jam_topic.namespace_id <= ? \
        and delete_date is null \
        order by topic_name \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_TOPIC_HISTORY = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic.topic_id, \
          jam_topic.topic_name, jam_topic_version.edit_date as change_date, \
          jam_topic_version.wiki_user_id, \
          coalesce(jam_wiki_user.login, jam_topic_version.wiki_user_display) as display_name, \
          jam_topic_version.edit_type, jam_virtual_wiki.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.previous_topic_version_id, \
          jam_topic_version.characters_changed, null as log_type, \
          jam_topic_version.version_params as log_params \
        FROM jam_topic, jam_virtual_wiki, jam_topic_version \
        LEFT OUTER JOIN jam_wiki_user ON ( \
          jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        ) \
        WHERE jam_topic.topic_id = ? \
        AND jam_topic.topic_id = jam_topic_version.topic_id \
        AND jam_topic.virtual_wiki_id = jam_virtual_wiki.virtual_wiki_id \
        AND jam_topic.delete_date is null \
        order by change_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_TOPICS_ADMIN = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select topic_name from jam_topic \
        where virtual_wiki_id = ? \
        and topic_admin_only = 1 \
        and delete_date is null \
        order by topic_name \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_WATCHLIST_CHANGES = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
          jam_topic_version.edit_date as change_date, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
          jam_wiki_user.login as display_name, jam_topic.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, \
          jam_topic_version.characters_changed, \
          null as log_type, jam_topic_version.version_params as log_params \
        from jam_topic, jam_virtual_wiki, jam_topic_version, \
        jam_wiki_user, jam_watchlist \
        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
        and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        and jam_topic.current_version_id = jam_topic_version.topic_version_id \
        and jam_topic.topic_name = jam_watchlist.topic_name \
        and jam_virtual_wiki.virtual_wiki_id = ? \
        and jam_watchlist.wiki_user_id = ? \
        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
        order by edit_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_WIKI_USER_CHANGES_ANONYMOUS = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
          jam_topic_version.edit_date as change_date, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
          jam_topic_version.wiki_user_display as display_name, \
          jam_topic.virtual_wiki_id, jam_virtual_wiki.virtual_wiki_name, \
          jam_topic_version.characters_changed, \
          null as log_type, jam_topic_version.version_params as log_params \
        from jam_topic, jam_virtual_wiki, jam_topic_version \
        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
        and jam_topic.topic_id = jam_topic_version.topic_id \
        and jam_virtual_wiki.virtual_wiki_name = ? \
        and jam_topic_version.wiki_user_display = ? \
        and jam_topic_version.wiki_user_id is null \
        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
        order by edit_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_WIKI_USER_CHANGES_LOGIN = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
          jam_topic_version.edit_date as change_date, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
          jam_wiki_user.login as display_name, jam_topic.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, \
          jam_topic_version.characters_changed, \
          null as log_type, jam_topic_version.version_params as log_params \
        from jam_topic, jam_virtual_wiki, jam_topic_version, jam_wiki_user \
        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
        and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        and jam_topic.topic_id = jam_topic_version.topic_id \
        and jam_virtual_wiki.virtual_wiki_name = ? \
        and jam_wiki_user.login = ? \
        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
        order by edit_date desc \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
# use rownum instead of limit and offset
STATEMENT_SELECT_WIKI_USERS = \
    select * from ( \
      select a.*, rownum rowcount from ( \
        select login \
        from jam_wiki_user \
        order by login \
      ) a \
      where rownum <= ? \
    ) \
    where rowcount > ? 
UPGRADE_100_ADD_VIRTUAL_WIKI_LOGO_URL = \
    alter table jam_virtual_wiki add logo_image_url VARCHAR(200)
UPGRADE_100_ADD_VIRTUAL_WIKI_SITE_NAME = \
    alter table jam_virtual_wiki add site_name VARCHAR(200)
UPGRADE_100_ADD_VIRTUAL_WIKI_META_DESCRIPTION = \
    alter table jam_virtual_wiki add meta_description VARCHAR(500)
UPGRADE_100_DROP_VIRTUAL_WIKI_DEFAULT_TOPIC_NOT_NULL = \
    alter table jam_virtual_wiki modify default_topic_name VARCHAR(200) NULL
